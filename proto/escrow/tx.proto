syntax = "proto3";
package escrow;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
// this line is used by starport scaffolding # proto/tx/import
//import "github.com/cosmos/cosmos-sdk/bank/v1beta1/bank.proto";

option go_package = "github.com/interchainberlin/pooltoy/x/escrow/types";

// Msg defines the Msg service.
service Msg {
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc Offer(OfferRequest) returns (OfferResponse);
  rpc Response(ResponseRequest) returns (ResponseResult);
  rpc CancelOffer(CancelOfferRequest) returns(CancelOfferResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message OfferRequest {
  string sender = 1;
  repeated cosmos.base.v1beta1.Coin amount = 2
  [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  repeated cosmos.base.v1beta1.Coin request = 3
  [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message  OfferResponse {
  string sender = 1;
  int64 index = 2;
}

message ResponseRequest {
  string sender = 1;
  int64 id = 2;
}

message ResponseResult {}

message CancelOfferRequest {
  string sender = 1;
  int64 id = 2;
}

message CancelOfferResponse {}
