syntax = "proto3";
package escrow;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/interchainberlin/pooltoy/x/escrow/types";

// Query defines the gRPC querier service.
service Query {
  // this line is used by starport scaffolding # 2
  rpc QueryOfferListAll (OfferListAllRequest) returns (OfferListResponse);
  rpc QueryOfferByID (QueryOfferByIDRequest) returns (Offer);
  rpc QueryOfferByAddr (QueryOfferByAddrRequest) returns (OfferListResponse);
}

message OfferListAllRequest {}

message QueryOfferByIDRequest{
  int64 id = 1;
}

message QueryOfferByAddrRequest {
  string offerer = 1;
}

message OfferListResponse {
  repeated Offer offerList = 1;
}

message Offer {
  string sender = 1;
  repeated cosmos.base.v1beta1.Coin amount = 2
  [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  repeated cosmos.base.v1beta1.Coin request = 3
  [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  int64 id =4;
}
